// Copyright 2022 TiKV Project Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package config

import (
	"encoding/json"
	"fmt"
	"github.com/tikv/pd/pkg/typeutil"
	"io/ioutil"
	"net/http"
	"sync"
)

var (
	// default region max size is 144MB
	defaultRegionMaxSize = uint64(144)
	// default region split size is 96MB
	defaultRegionSplitSize = uint64(96)
	// default region max key is 144000
	defaultRegionMaxKey = uint64(1440000)
	// default region split key is 960000
	defaultRegionSplitKey = uint64(960000)
)

// StoreConfigManager is used to manage the store config.
type StoreConfigManager struct {
	mu     sync.RWMutex
	client *http.Client
	config *StoreConfig
}

// NewStoreConfigManager creates a new StoreConfigManager.
func NewStoreConfigManager(client *http.Client) *StoreConfigManager {
	return &StoreConfigManager{
		client: client,
	}
}

// GetStoreConfig returns the current store configuration.
func (m *StoreConfigManager) GetStoreConfig() *StoreConfig {
	m.mu.RLock()
	defer m.mu.RUnlock()
	return m.config
}

// StoreConfig is the config of store like TiKV.
// generated by https://mholt.github.io/json-to-go/.
//nolint
type StoreConfig struct {
	LogLevel             string  `json:"log-level"`
	LogFile              string  `json:"log-file"`
	LogFormat            string  `json:"log-format"`
	SlowLogFile          string  `json:"slow-log-file"`
	SlowLogThreshold     string  `json:"slow-log-threshold"`
	LogRotationTimespan  string  `json:"log-rotation-timespan"`
	LogRotationSize      string  `json:"log-rotation-size"`
	EnableIoSnoop        bool    `json:"enable-io-snoop"`
	AbortOnPanic         bool    `json:"abort-on-panic"`
	MemoryUsageLimit     int64   `json:"memory-usage-limit"`
	MemoryUsageHighWater float64 `json:"memory-usage-high-water"`
	Readpool             struct {
		Unified struct {
			MinThreadCount    int    `json:"min-thread-count"`
			MaxThreadCount    int    `json:"max-thread-count"`
			StackSize         string `json:"stack-size"`
			MaxTasksPerWorker int    `json:"max-tasks-per-worker"`
		} `json:"unified"`
		Storage struct {
			UseUnifiedPool          bool   `json:"use-unified-pool"`
			HighConcurrency         int    `json:"high-concurrency"`
			NormalConcurrency       int    `json:"normal-concurrency"`
			LowConcurrency          int    `json:"low-concurrency"`
			MaxTasksPerWorkerHigh   int    `json:"max-tasks-per-worker-high"`
			MaxTasksPerWorkerNormal int    `json:"max-tasks-per-worker-normal"`
			MaxTasksPerWorkerLow    int    `json:"max-tasks-per-worker-low"`
			StackSize               string `json:"stack-size"`
		} `json:"storage"`
		Coprocessor struct {
			UseUnifiedPool          bool   `json:"use-unified-pool"`
			HighConcurrency         int    `json:"high-concurrency"`
			NormalConcurrency       int    `json:"normal-concurrency"`
			LowConcurrency          int    `json:"low-concurrency"`
			MaxTasksPerWorkerHigh   int    `json:"max-tasks-per-worker-high"`
			MaxTasksPerWorkerNormal int    `json:"max-tasks-per-worker-normal"`
			MaxTasksPerWorkerLow    int    `json:"max-tasks-per-worker-low"`
			StackSize               string `json:"stack-size"`
		} `json:"coprocessor"`
	} `json:"readpool"`
	Server struct {
		Addr                             string `json:"addr"`
		AdvertiseAddr                    string `json:"advertise-addr"`
		StatusAddr                       string `json:"status-addr"`
		AdvertiseStatusAddr              string `json:"advertise-status-addr"`
		StatusThreadPoolSize             int    `json:"status-thread-pool-size"`
		MaxGrpcSendMsgLen                int    `json:"max-grpc-send-msg-len"`
		RaftClientGrpcSendMsgBuffer      int    `json:"raft-client-grpc-send-msg-buffer"`
		RaftClientQueueSize              int    `json:"raft-client-queue-size"`
		RaftMsgMaxBatchSize              int    `json:"raft-msg-max-batch-size"`
		GrpcCompressionType              string `json:"grpc-compression-type"`
		GrpcConcurrency                  int    `json:"grpc-concurrency"`
		GrpcConcurrentStream             int    `json:"grpc-concurrent-stream"`
		GrpcRaftConnNum                  int    `json:"grpc-raft-conn-num"`
		GrpcMemoryPoolQuota              int64  `json:"grpc-memory-pool-quota"`
		GrpcStreamInitialWindowSize      string `json:"grpc-stream-initial-window-size"`
		GrpcKeepaliveTime                string `json:"grpc-keepalive-time"`
		GrpcKeepaliveTimeout             string `json:"grpc-keepalive-timeout"`
		ConcurrentSendSnapLimit          int    `json:"concurrent-send-snap-limit"`
		ConcurrentRecvSnapLimit          int    `json:"concurrent-recv-snap-limit"`
		EndPointRecursionLimit           int    `json:"end-point-recursion-limit"`
		EndPointStreamChannelSize        int    `json:"end-point-stream-channel-size"`
		EndPointBatchRowLimit            int    `json:"end-point-batch-row-limit"`
		EndPointStreamBatchRowLimit      int    `json:"end-point-stream-batch-row-limit"`
		EndPointEnableBatchIfPossible    bool   `json:"end-point-enable-batch-if-possible"`
		EndPointRequestMaxHandleDuration string `json:"end-point-request-max-handle-duration"`
		EndPointMaxConcurrency           int    `json:"end-point-max-concurrency"`
		SnapMaxWriteBytesPerSec          string `json:"snap-max-write-bytes-per-sec"`
		SnapMaxTotalSize                 string `json:"snap-max-total-size"`
		StatsConcurrency                 int    `json:"stats-concurrency"`
		HeavyLoadThreshold               int    `json:"heavy-load-threshold"`
		HeavyLoadWaitDuration            string `json:"heavy-load-wait-duration"`
		EnableRequestBatch               bool   `json:"enable-request-batch"`
		BackgroundThreadCount            int    `json:"background-thread-count"`
		EndPointSlowLogThreshold         string `json:"end-point-slow-log-threshold"`
		ForwardMaxConnectionsPerAddress  int    `json:"forward-max-connections-per-address"`
		Labels                           struct {
		} `json:"labels"`
	} `json:"server"`
	Storage struct {
		DataDir                        string  `json:"data-dir"`
		GcRatioThreshold               float64 `json:"gc-ratio-threshold"`
		MaxKeySize                     int     `json:"max-key-size"`
		SchedulerConcurrency           int     `json:"scheduler-concurrency"`
		SchedulerWorkerPoolSize        int     `json:"scheduler-worker-pool-size"`
		SchedulerPendingWriteThreshold string  `json:"scheduler-pending-write-threshold"`
		ReserveSpace                   string  `json:"reserve-space"`
		EnableAsyncApplyPrewrite       bool    `json:"enable-async-apply-prewrite"`
		EnableTTL                      bool    `json:"enable-ttl"`
		TTLCheckPollInterval           string  `json:"ttl-check-poll-interval"`
		BlockCache                     struct {
			Shared              bool    `json:"shared"`
			Capacity            string  `json:"capacity"`
			NumShardBits        int     `json:"num-shard-bits"`
			StrictCapacityLimit bool    `json:"strict-capacity-limit"`
			HighPriPoolRatio    float64 `json:"high-pri-pool-ratio"`
			MemoryAllocator     string  `json:"memory-allocator"`
		} `json:"block-cache"`
		IoRateLimit struct {
			MaxBytesPerSec              string `json:"max-bytes-per-sec"`
			Mode                        string `json:"mode"`
			Strict                      bool   `json:"strict"`
			ForegroundReadPriority      string `json:"foreground-read-priority"`
			ForegroundWritePriority     string `json:"foreground-write-priority"`
			FlushPriority               string `json:"flush-priority"`
			LevelZeroCompactionPriority string `json:"level-zero-compaction-priority"`
			CompactionPriority          string `json:"compaction-priority"`
			ReplicationPriority         string `json:"replication-priority"`
			LoadBalancePriority         string `json:"load-balance-priority"`
			GcPriority                  string `json:"gc-priority"`
			ImportPriority              string `json:"import-priority"`
			ExportPriority              string `json:"export-priority"`
			OtherPriority               string `json:"other-priority"`
		} `json:"io-rate-limit"`
	} `json:"storage"`
	Pd struct {
		Endpoints        []string `json:"endpoints"`
		RetryInterval    string   `json:"retry-interval"`
		RetryMaxCount    int64    `json:"retry-max-count"`
		RetryLogEvery    int      `json:"retry-log-every"`
		UpdateInterval   string   `json:"update-interval"`
		EnableForwarding bool     `json:"enable-forwarding"`
	} `json:"pd"`
	Raftstore struct {
		ID                               int    `json:"id"`
		Prevote                          bool   `json:"prevote"`
		RaftdbPath                       string `json:"raftdb-path"`
		Capacity                         string `json:"capacity"`
		RaftEntryMaxSize                 string `json:"raft-entry-max-size"`
		RaftLogGcTickInterval            string `json:"raft-log-gc-tick-interval"`
		RaftLogGcThreshold               int    `json:"raft-log-gc-threshold"`
		RaftLogGcCountLimit              int    `json:"raft-log-gc-count-limit"`
		RaftLogGcSizeLimit               string `json:"raft-log-gc-size-limit"`
		RaftEnginePurgeInterval          string `json:"raft-engine-purge-interval"`
		RaftEntryCacheLifeTime           string `json:"raft-entry-cache-life-time"`
		RaftRejectTransferLeaderDuration string `json:"raft-reject-transfer-leader-duration"`
		SplitRegionCheckTickInterval     string `json:"split-region-check-tick-interval"`
		RegionSplitCheckDiff             string `json:"region-split-check-diff"`
		RegionCompactCheckInterval       string `json:"region-compact-check-interval"`
		RegionCompactCheckStep           int    `json:"region-compact-check-step"`
		RegionCompactMinTombstones       int    `json:"region-compact-min-tombstones"`
		RegionCompactTombstonesPercent   int    `json:"region-compact-tombstones-percent"`
		PdHeartbeatTickInterval          string `json:"pd-heartbeat-tick-interval"`
		PdStoreHeartbeatTickInterval     string `json:"pd-store-heartbeat-tick-interval"`
		SnapMgrGcTickInterval            string `json:"snap-mgr-gc-tick-interval"`
		SnapGcTimeout                    string `json:"snap-gc-timeout"`
		LockCfCompactInterval            string `json:"lock-cf-compact-interval"`
		LockCfCompactBytesThreshold      string `json:"lock-cf-compact-bytes-threshold"`
		NotifyCapacity                   int    `json:"notify-capacity"`
		MessagesPerTick                  int    `json:"messages-per-tick"`
		ApplyTaskPerTick                 int    `json:"apply-task-per-tick"`
		MaxPeerDownDuration              string `json:"max-peer-down-duration"`
		MaxLeaderMissingDuration         string `json:"max-leader-missing-duration"`
		AbnormalLeaderMissingDuration    string `json:"abnormal-leader-missing-duration"`
		PeerStaleStateCheckInterval      string `json:"peer-stale-state-check-interval"`
		SnapApplyBatchSize               string `json:"snap-apply-batch-size"`
		ConsistencyCheckInterval         string `json:"consistency-check-interval"`
		RaftStoreMaxLeaderLease          string `json:"raft-store-max-leader-lease"`
		AllowRemoveLeader                bool   `json:"allow-remove-leader"`
		MergeCheckTickInterval           string `json:"merge-check-tick-interval"`
		DeleteStrategy                   string `json:"delete-strategy"`
		CleanupImportSstInterval         string `json:"cleanup-import-sst-interval"`
		LocalReadBatchSize               int    `json:"local-read-batch-size"`
		ApplyMaxBatchSize                int    `json:"apply-max-batch-size"`
		ApplyPoolSize                    int    `json:"apply-pool-size"`
		ApplyRescheduleDuration          string `json:"apply-reschedule-duration"`
		ApplyLowPriorityPoolSize         int    `json:"apply-low-priority-pool-size"`
		StoreMaxBatchSize                int    `json:"store-max-batch-size"`
		StorePoolSize                    int    `json:"store-pool-size"`
		StoreRescheduleDuration          string `json:"store-reschedule-duration"`
		StoreLowPriorityPoolSize         int    `json:"store-low-priority-pool-size"`
		FuturePollSize                   int    `json:"future-poll-size"`
		ApplyWritePoolSize               int    `json:"apply-write-pool-size"`
		HibernateRegions                 bool   `json:"hibernate-regions"`
		DisableKvWal                     bool   `json:"disable-kv-wal"`
		SkipWriteCommitIndex             bool   `json:"skip-write-commit-index"`
		EnableProposeBatch               bool   `json:"enable-propose-batch"`
		SkipHeader                       bool   `json:"skip-header"`
		PerfLevel                        int    `json:"perf-level"`
	} `json:"raftstore"`
	Coprocessor struct {
		SplitRegionOnTable     bool   `json:"split-region-on-table"`
		BatchSplitLimit        int    `json:"batch-split-limit"`
		RegionMaxSize          string `json:"region-max-size"`
		RegionSplitSize        string `json:"region-split-size"`
		RegionMaxKeys          int    `json:"region-max-keys"`
		RegionSplitKeys        int    `json:"region-split-keys"`
		ConsistencyCheckMethod string `json:"consistency-check-method"`
		PerfLevel              int    `json:"perf-level"`
	} `json:"coprocessor"`
	CoprocessorV2 struct {
		CoprocessorPluginDirectory interface{} `json:"coprocessor-plugin-directory"`
	} `json:"coprocessor-v2"`
	Rocksdb struct {
		InfoLogLevel                     string `json:"info-log-level"`
		WalRecoveryMode                  int    `json:"wal-recovery-mode"`
		WalDir                           string `json:"wal-dir"`
		WalTTLSeconds                    int    `json:"wal-ttl-seconds"`
		WalSizeLimit                     string `json:"wal-size-limit"`
		MaxTotalWalSize                  string `json:"max-total-wal-size"`
		MaxBackgroundJobs                int    `json:"max-background-jobs"`
		MaxBackgroundFlushes             int    `json:"max-background-flushes"`
		MaxManifestFileSize              string `json:"max-manifest-file-size"`
		CreateIfMissing                  bool   `json:"create-if-missing"`
		MaxOpenFiles                     int    `json:"max-open-files"`
		EnableStatistics                 bool   `json:"enable-statistics"`
		StatsDumpPeriod                  string `json:"stats-dump-period"`
		CompactionReadaheadSize          string `json:"compaction-readahead-size"`
		InfoLogMaxSize                   string `json:"info-log-max-size"`
		InfoLogRollTime                  string `json:"info-log-roll-time"`
		InfoLogKeepLogFileNum            int    `json:"info-log-keep-log-file-num"`
		InfoLogDir                       string `json:"info-log-dir"`
		RateBytesPerSec                  string `json:"rate-bytes-per-sec"`
		RateLimiterRefillPeriod          string `json:"rate-limiter-refill-period"`
		RateLimiterMode                  int    `json:"rate-limiter-mode"`
		RateLimiterAutoTuned             bool   `json:"rate-limiter-auto-tuned"`
		BytesPerSync                     string `json:"bytes-per-sync"`
		WalBytesPerSync                  string `json:"wal-bytes-per-sync"`
		MaxSubCompactions                int    `json:"max-sub-compactions"`
		WritableFileMaxBufferSize        string `json:"writable-file-max-buffer-size"`
		UseDirectIoForFlushAndCompaction bool   `json:"use-direct-io-for-flush-and-compaction"`
		EnablePipelinedWrite             bool   `json:"enable-pipelined-write"`
		EnableMultiBatchWrite            bool   `json:"enable-multi-batch-write"`
		EnableUnorderedWrite             bool   `json:"enable-unordered-write"`
		Defaultcf                        struct {
			BlockSize                           string   `json:"block-size"`
			BlockCacheSize                      string   `json:"block-cache-size"`
			DisableBlockCache                   bool     `json:"disable-block-cache"`
			CacheIndexAndFilterBlocks           bool     `json:"cache-index-and-filter-blocks"`
			PinL0FilterAndIndexBlocks           bool     `json:"pin-l0-filter-and-index-blocks"`
			UseBloomFilter                      bool     `json:"use-bloom-filter"`
			OptimizeFiltersForHits              bool     `json:"optimize-filters-for-hits"`
			WholeKeyFiltering                   bool     `json:"whole-key-filtering"`
			BloomFilterBitsPerKey               int      `json:"bloom-filter-bits-per-key"`
			BlockBasedBloomFilter               bool     `json:"block-based-bloom-filter"`
			ReadAmpBytesPerBit                  int      `json:"read-amp-bytes-per-bit"`
			CompressionPerLevel                 []string `json:"compression-per-level"`
			WriteBufferSize                     string   `json:"write-buffer-size"`
			MaxWriteBufferNumber                int      `json:"max-write-buffer-number"`
			MinWriteBufferNumberToMerge         int      `json:"min-write-buffer-number-to-merge"`
			MaxBytesForLevelBase                string   `json:"max-bytes-for-level-base"`
			TargetFileSizeBase                  string   `json:"target-file-size-base"`
			Level0FileNumCompactionTrigger      int      `json:"level0-file-num-compaction-trigger"`
			Level0SlowdownWritesTrigger         int      `json:"level0-slowdown-writes-trigger"`
			Level0StopWritesTrigger             int      `json:"level0-stop-writes-trigger"`
			MaxCompactionBytes                  string   `json:"max-compaction-bytes"`
			CompactionPri                       int      `json:"compaction-pri"`
			DynamicLevelBytes                   bool     `json:"dynamic-level-bytes"`
			NumLevels                           int      `json:"num-levels"`
			MaxBytesForLevelMultiplier          int      `json:"max-bytes-for-level-multiplier"`
			CompactionStyle                     int      `json:"compaction-style"`
			DisableAutoCompactions              bool     `json:"disable-auto-compactions"`
			SoftPendingCompactionBytesLimit     string   `json:"soft-pending-compaction-bytes-limit"`
			HardPendingCompactionBytesLimit     string   `json:"hard-pending-compaction-bytes-limit"`
			ForceConsistencyChecks              bool     `json:"force-consistency-checks"`
			PropSizeIndexDistance               int      `json:"prop-size-index-distance"`
			PropKeysIndexDistance               int      `json:"prop-keys-index-distance"`
			EnableDoublySkiplist                bool     `json:"enable-doubly-skiplist"`
			EnableCompactionGuard               bool     `json:"enable-compaction-guard"`
			CompactionGuardMinOutputFileSize    string   `json:"compaction-guard-min-output-file-size"`
			CompactionGuardMaxOutputFileSize    string   `json:"compaction-guard-max-output-file-size"`
			BottommostLevelCompression          string   `json:"bottommost-level-compression"`
			BottommostZstdCompressionDictSize   int      `json:"bottommost-zstd-compression-dict-size"`
			BottommostZstdCompressionSampleSize int      `json:"bottommost-zstd-compression-sample-size"`
			Titan                               struct {
				MinBlobSize             string  `json:"min-blob-size"`
				BlobFileCompression     string  `json:"blob-file-compression"`
				BlobCacheSize           string  `json:"blob-cache-size"`
				MinGcBatchSize          string  `json:"min-gc-batch-size"`
				MaxGcBatchSize          string  `json:"max-gc-batch-size"`
				DiscardableRatio        float64 `json:"discardable-ratio"`
				SampleRatio             float64 `json:"sample-ratio"`
				MergeSmallFileThreshold string  `json:"merge-small-file-threshold"`
				BlobRunMode             string  `json:"blob-run-mode"`
				LevelMerge              bool    `json:"level-merge"`
				RangeMerge              bool    `json:"range-merge"`
				MaxSortedRuns           int     `json:"max-sorted-runs"`
				GcMergeRewrite          bool    `json:"gc-merge-rewrite"`
			} `json:"titan"`
		} `json:"defaultcf"`
		Writecf struct {
			BlockSize                           string   `json:"block-size"`
			BlockCacheSize                      string   `json:"block-cache-size"`
			DisableBlockCache                   bool     `json:"disable-block-cache"`
			CacheIndexAndFilterBlocks           bool     `json:"cache-index-and-filter-blocks"`
			PinL0FilterAndIndexBlocks           bool     `json:"pin-l0-filter-and-index-blocks"`
			UseBloomFilter                      bool     `json:"use-bloom-filter"`
			OptimizeFiltersForHits              bool     `json:"optimize-filters-for-hits"`
			WholeKeyFiltering                   bool     `json:"whole-key-filtering"`
			BloomFilterBitsPerKey               int      `json:"bloom-filter-bits-per-key"`
			BlockBasedBloomFilter               bool     `json:"block-based-bloom-filter"`
			ReadAmpBytesPerBit                  int      `json:"read-amp-bytes-per-bit"`
			CompressionPerLevel                 []string `json:"compression-per-level"`
			WriteBufferSize                     string   `json:"write-buffer-size"`
			MaxWriteBufferNumber                int      `json:"max-write-buffer-number"`
			MinWriteBufferNumberToMerge         int      `json:"min-write-buffer-number-to-merge"`
			MaxBytesForLevelBase                string   `json:"max-bytes-for-level-base"`
			TargetFileSizeBase                  string   `json:"target-file-size-base"`
			Level0FileNumCompactionTrigger      int      `json:"level0-file-num-compaction-trigger"`
			Level0SlowdownWritesTrigger         int      `json:"level0-slowdown-writes-trigger"`
			Level0StopWritesTrigger             int      `json:"level0-stop-writes-trigger"`
			MaxCompactionBytes                  string   `json:"max-compaction-bytes"`
			CompactionPri                       int      `json:"compaction-pri"`
			DynamicLevelBytes                   bool     `json:"dynamic-level-bytes"`
			NumLevels                           int      `json:"num-levels"`
			MaxBytesForLevelMultiplier          int      `json:"max-bytes-for-level-multiplier"`
			CompactionStyle                     int      `json:"compaction-style"`
			DisableAutoCompactions              bool     `json:"disable-auto-compactions"`
			SoftPendingCompactionBytesLimit     string   `json:"soft-pending-compaction-bytes-limit"`
			HardPendingCompactionBytesLimit     string   `json:"hard-pending-compaction-bytes-limit"`
			ForceConsistencyChecks              bool     `json:"force-consistency-checks"`
			PropSizeIndexDistance               int      `json:"prop-size-index-distance"`
			PropKeysIndexDistance               int      `json:"prop-keys-index-distance"`
			EnableDoublySkiplist                bool     `json:"enable-doubly-skiplist"`
			EnableCompactionGuard               bool     `json:"enable-compaction-guard"`
			CompactionGuardMinOutputFileSize    string   `json:"compaction-guard-min-output-file-size"`
			CompactionGuardMaxOutputFileSize    string   `json:"compaction-guard-max-output-file-size"`
			BottommostLevelCompression          string   `json:"bottommost-level-compression"`
			BottommostZstdCompressionDictSize   int      `json:"bottommost-zstd-compression-dict-size"`
			BottommostZstdCompressionSampleSize int      `json:"bottommost-zstd-compression-sample-size"`
			Titan                               struct {
				MinBlobSize             string  `json:"min-blob-size"`
				BlobFileCompression     string  `json:"blob-file-compression"`
				BlobCacheSize           string  `json:"blob-cache-size"`
				MinGcBatchSize          string  `json:"min-gc-batch-size"`
				MaxGcBatchSize          string  `json:"max-gc-batch-size"`
				DiscardableRatio        float64 `json:"discardable-ratio"`
				SampleRatio             float64 `json:"sample-ratio"`
				MergeSmallFileThreshold string  `json:"merge-small-file-threshold"`
				BlobRunMode             string  `json:"blob-run-mode"`
				LevelMerge              bool    `json:"level-merge"`
				RangeMerge              bool    `json:"range-merge"`
				MaxSortedRuns           int     `json:"max-sorted-runs"`
				GcMergeRewrite          bool    `json:"gc-merge-rewrite"`
			} `json:"titan"`
		} `json:"writecf"`
		Lockcf struct {
			BlockSize                           string   `json:"block-size"`
			BlockCacheSize                      string   `json:"block-cache-size"`
			DisableBlockCache                   bool     `json:"disable-block-cache"`
			CacheIndexAndFilterBlocks           bool     `json:"cache-index-and-filter-blocks"`
			PinL0FilterAndIndexBlocks           bool     `json:"pin-l0-filter-and-index-blocks"`
			UseBloomFilter                      bool     `json:"use-bloom-filter"`
			OptimizeFiltersForHits              bool     `json:"optimize-filters-for-hits"`
			WholeKeyFiltering                   bool     `json:"whole-key-filtering"`
			BloomFilterBitsPerKey               int      `json:"bloom-filter-bits-per-key"`
			BlockBasedBloomFilter               bool     `json:"block-based-bloom-filter"`
			ReadAmpBytesPerBit                  int      `json:"read-amp-bytes-per-bit"`
			CompressionPerLevel                 []string `json:"compression-per-level"`
			WriteBufferSize                     string   `json:"write-buffer-size"`
			MaxWriteBufferNumber                int      `json:"max-write-buffer-number"`
			MinWriteBufferNumberToMerge         int      `json:"min-write-buffer-number-to-merge"`
			MaxBytesForLevelBase                string   `json:"max-bytes-for-level-base"`
			TargetFileSizeBase                  string   `json:"target-file-size-base"`
			Level0FileNumCompactionTrigger      int      `json:"level0-file-num-compaction-trigger"`
			Level0SlowdownWritesTrigger         int      `json:"level0-slowdown-writes-trigger"`
			Level0StopWritesTrigger             int      `json:"level0-stop-writes-trigger"`
			MaxCompactionBytes                  string   `json:"max-compaction-bytes"`
			CompactionPri                       int      `json:"compaction-pri"`
			DynamicLevelBytes                   bool     `json:"dynamic-level-bytes"`
			NumLevels                           int      `json:"num-levels"`
			MaxBytesForLevelMultiplier          int      `json:"max-bytes-for-level-multiplier"`
			CompactionStyle                     int      `json:"compaction-style"`
			DisableAutoCompactions              bool     `json:"disable-auto-compactions"`
			SoftPendingCompactionBytesLimit     string   `json:"soft-pending-compaction-bytes-limit"`
			HardPendingCompactionBytesLimit     string   `json:"hard-pending-compaction-bytes-limit"`
			ForceConsistencyChecks              bool     `json:"force-consistency-checks"`
			PropSizeIndexDistance               int      `json:"prop-size-index-distance"`
			PropKeysIndexDistance               int      `json:"prop-keys-index-distance"`
			EnableDoublySkiplist                bool     `json:"enable-doubly-skiplist"`
			EnableCompactionGuard               bool     `json:"enable-compaction-guard"`
			CompactionGuardMinOutputFileSize    string   `json:"compaction-guard-min-output-file-size"`
			CompactionGuardMaxOutputFileSize    string   `json:"compaction-guard-max-output-file-size"`
			BottommostLevelCompression          string   `json:"bottommost-level-compression"`
			BottommostZstdCompressionDictSize   int      `json:"bottommost-zstd-compression-dict-size"`
			BottommostZstdCompressionSampleSize int      `json:"bottommost-zstd-compression-sample-size"`
			Titan                               struct {
				MinBlobSize             string  `json:"min-blob-size"`
				BlobFileCompression     string  `json:"blob-file-compression"`
				BlobCacheSize           string  `json:"blob-cache-size"`
				MinGcBatchSize          string  `json:"min-gc-batch-size"`
				MaxGcBatchSize          string  `json:"max-gc-batch-size"`
				DiscardableRatio        float64 `json:"discardable-ratio"`
				SampleRatio             float64 `json:"sample-ratio"`
				MergeSmallFileThreshold string  `json:"merge-small-file-threshold"`
				BlobRunMode             string  `json:"blob-run-mode"`
				LevelMerge              bool    `json:"level-merge"`
				RangeMerge              bool    `json:"range-merge"`
				MaxSortedRuns           int     `json:"max-sorted-runs"`
				GcMergeRewrite          bool    `json:"gc-merge-rewrite"`
			} `json:"titan"`
		} `json:"lockcf"`
		Raftcf struct {
			BlockSize                           string   `json:"block-size"`
			BlockCacheSize                      string   `json:"block-cache-size"`
			DisableBlockCache                   bool     `json:"disable-block-cache"`
			CacheIndexAndFilterBlocks           bool     `json:"cache-index-and-filter-blocks"`
			PinL0FilterAndIndexBlocks           bool     `json:"pin-l0-filter-and-index-blocks"`
			UseBloomFilter                      bool     `json:"use-bloom-filter"`
			OptimizeFiltersForHits              bool     `json:"optimize-filters-for-hits"`
			WholeKeyFiltering                   bool     `json:"whole-key-filtering"`
			BloomFilterBitsPerKey               int      `json:"bloom-filter-bits-per-key"`
			BlockBasedBloomFilter               bool     `json:"block-based-bloom-filter"`
			ReadAmpBytesPerBit                  int      `json:"read-amp-bytes-per-bit"`
			CompressionPerLevel                 []string `json:"compression-per-level"`
			WriteBufferSize                     string   `json:"write-buffer-size"`
			MaxWriteBufferNumber                int      `json:"max-write-buffer-number"`
			MinWriteBufferNumberToMerge         int      `json:"min-write-buffer-number-to-merge"`
			MaxBytesForLevelBase                string   `json:"max-bytes-for-level-base"`
			TargetFileSizeBase                  string   `json:"target-file-size-base"`
			Level0FileNumCompactionTrigger      int      `json:"level0-file-num-compaction-trigger"`
			Level0SlowdownWritesTrigger         int      `json:"level0-slowdown-writes-trigger"`
			Level0StopWritesTrigger             int      `json:"level0-stop-writes-trigger"`
			MaxCompactionBytes                  string   `json:"max-compaction-bytes"`
			CompactionPri                       int      `json:"compaction-pri"`
			DynamicLevelBytes                   bool     `json:"dynamic-level-bytes"`
			NumLevels                           int      `json:"num-levels"`
			MaxBytesForLevelMultiplier          int      `json:"max-bytes-for-level-multiplier"`
			CompactionStyle                     int      `json:"compaction-style"`
			DisableAutoCompactions              bool     `json:"disable-auto-compactions"`
			SoftPendingCompactionBytesLimit     string   `json:"soft-pending-compaction-bytes-limit"`
			HardPendingCompactionBytesLimit     string   `json:"hard-pending-compaction-bytes-limit"`
			ForceConsistencyChecks              bool     `json:"force-consistency-checks"`
			PropSizeIndexDistance               int      `json:"prop-size-index-distance"`
			PropKeysIndexDistance               int      `json:"prop-keys-index-distance"`
			EnableDoublySkiplist                bool     `json:"enable-doubly-skiplist"`
			EnableCompactionGuard               bool     `json:"enable-compaction-guard"`
			CompactionGuardMinOutputFileSize    string   `json:"compaction-guard-min-output-file-size"`
			CompactionGuardMaxOutputFileSize    string   `json:"compaction-guard-max-output-file-size"`
			BottommostLevelCompression          string   `json:"bottommost-level-compression"`
			BottommostZstdCompressionDictSize   int      `json:"bottommost-zstd-compression-dict-size"`
			BottommostZstdCompressionSampleSize int      `json:"bottommost-zstd-compression-sample-size"`
			Titan                               struct {
				MinBlobSize             string  `json:"min-blob-size"`
				BlobFileCompression     string  `json:"blob-file-compression"`
				BlobCacheSize           string  `json:"blob-cache-size"`
				MinGcBatchSize          string  `json:"min-gc-batch-size"`
				MaxGcBatchSize          string  `json:"max-gc-batch-size"`
				DiscardableRatio        float64 `json:"discardable-ratio"`
				SampleRatio             float64 `json:"sample-ratio"`
				MergeSmallFileThreshold string  `json:"merge-small-file-threshold"`
				BlobRunMode             string  `json:"blob-run-mode"`
				LevelMerge              bool    `json:"level-merge"`
				RangeMerge              bool    `json:"range-merge"`
				MaxSortedRuns           int     `json:"max-sorted-runs"`
				GcMergeRewrite          bool    `json:"gc-merge-rewrite"`
			} `json:"titan"`
		} `json:"raftcf"`
		Titan struct {
			Enabled                  bool   `json:"enabled"`
			Dirname                  string `json:"dirname"`
			DisableGc                bool   `json:"disable-gc"`
			MaxBackgroundGc          int    `json:"max-background-gc"`
			PurgeObsoleteFilesPeriod string `json:"purge-obsolete-files-period"`
		} `json:"titan"`
	} `json:"rocksdb"`
	Raftdb struct {
		WalRecoveryMode                  int    `json:"wal-recovery-mode"`
		WalDir                           string `json:"wal-dir"`
		WalTTLSeconds                    int    `json:"wal-ttl-seconds"`
		WalSizeLimit                     string `json:"wal-size-limit"`
		MaxTotalWalSize                  string `json:"max-total-wal-size"`
		MaxBackgroundJobs                int    `json:"max-background-jobs"`
		MaxBackgroundFlushes             int    `json:"max-background-flushes"`
		MaxManifestFileSize              string `json:"max-manifest-file-size"`
		CreateIfMissing                  bool   `json:"create-if-missing"`
		MaxOpenFiles                     int    `json:"max-open-files"`
		EnableStatistics                 bool   `json:"enable-statistics"`
		StatsDumpPeriod                  string `json:"stats-dump-period"`
		CompactionReadaheadSize          string `json:"compaction-readahead-size"`
		InfoLogMaxSize                   string `json:"info-log-max-size"`
		InfoLogRollTime                  string `json:"info-log-roll-time"`
		InfoLogKeepLogFileNum            int    `json:"info-log-keep-log-file-num"`
		InfoLogDir                       string `json:"info-log-dir"`
		InfoLogLevel                     string `json:"info-log-level"`
		MaxSubCompactions                int    `json:"max-sub-compactions"`
		WritableFileMaxBufferSize        string `json:"writable-file-max-buffer-size"`
		UseDirectIoForFlushAndCompaction bool   `json:"use-direct-io-for-flush-and-compaction"`
		EnablePipelinedWrite             bool   `json:"enable-pipelined-write"`
		EnableUnorderedWrite             bool   `json:"enable-unordered-write"`
		AllowConcurrentMemtableWrite     bool   `json:"allow-concurrent-memtable-write"`
		BytesPerSync                     string `json:"bytes-per-sync"`
		WalBytesPerSync                  string `json:"wal-bytes-per-sync"`
		Defaultcf                        struct {
			BlockSize                           string   `json:"block-size"`
			BlockCacheSize                      string   `json:"block-cache-size"`
			DisableBlockCache                   bool     `json:"disable-block-cache"`
			CacheIndexAndFilterBlocks           bool     `json:"cache-index-and-filter-blocks"`
			PinL0FilterAndIndexBlocks           bool     `json:"pin-l0-filter-and-index-blocks"`
			UseBloomFilter                      bool     `json:"use-bloom-filter"`
			OptimizeFiltersForHits              bool     `json:"optimize-filters-for-hits"`
			WholeKeyFiltering                   bool     `json:"whole-key-filtering"`
			BloomFilterBitsPerKey               int      `json:"bloom-filter-bits-per-key"`
			BlockBasedBloomFilter               bool     `json:"block-based-bloom-filter"`
			ReadAmpBytesPerBit                  int      `json:"read-amp-bytes-per-bit"`
			CompressionPerLevel                 []string `json:"compression-per-level"`
			WriteBufferSize                     string   `json:"write-buffer-size"`
			MaxWriteBufferNumber                int      `json:"max-write-buffer-number"`
			MinWriteBufferNumberToMerge         int      `json:"min-write-buffer-number-to-merge"`
			MaxBytesForLevelBase                string   `json:"max-bytes-for-level-base"`
			TargetFileSizeBase                  string   `json:"target-file-size-base"`
			Level0FileNumCompactionTrigger      int      `json:"level0-file-num-compaction-trigger"`
			Level0SlowdownWritesTrigger         int      `json:"level0-slowdown-writes-trigger"`
			Level0StopWritesTrigger             int      `json:"level0-stop-writes-trigger"`
			MaxCompactionBytes                  string   `json:"max-compaction-bytes"`
			CompactionPri                       int      `json:"compaction-pri"`
			DynamicLevelBytes                   bool     `json:"dynamic-level-bytes"`
			NumLevels                           int      `json:"num-levels"`
			MaxBytesForLevelMultiplier          int      `json:"max-bytes-for-level-multiplier"`
			CompactionStyle                     int      `json:"compaction-style"`
			DisableAutoCompactions              bool     `json:"disable-auto-compactions"`
			SoftPendingCompactionBytesLimit     string   `json:"soft-pending-compaction-bytes-limit"`
			HardPendingCompactionBytesLimit     string   `json:"hard-pending-compaction-bytes-limit"`
			ForceConsistencyChecks              bool     `json:"force-consistency-checks"`
			PropSizeIndexDistance               int      `json:"prop-size-index-distance"`
			PropKeysIndexDistance               int      `json:"prop-keys-index-distance"`
			EnableDoublySkiplist                bool     `json:"enable-doubly-skiplist"`
			EnableCompactionGuard               bool     `json:"enable-compaction-guard"`
			CompactionGuardMinOutputFileSize    string   `json:"compaction-guard-min-output-file-size"`
			CompactionGuardMaxOutputFileSize    string   `json:"compaction-guard-max-output-file-size"`
			BottommostLevelCompression          string   `json:"bottommost-level-compression"`
			BottommostZstdCompressionDictSize   int      `json:"bottommost-zstd-compression-dict-size"`
			BottommostZstdCompressionSampleSize int      `json:"bottommost-zstd-compression-sample-size"`
			Titan                               struct {
				MinBlobSize             string  `json:"min-blob-size"`
				BlobFileCompression     string  `json:"blob-file-compression"`
				BlobCacheSize           string  `json:"blob-cache-size"`
				MinGcBatchSize          string  `json:"min-gc-batch-size"`
				MaxGcBatchSize          string  `json:"max-gc-batch-size"`
				DiscardableRatio        float64 `json:"discardable-ratio"`
				SampleRatio             float64 `json:"sample-ratio"`
				MergeSmallFileThreshold string  `json:"merge-small-file-threshold"`
				BlobRunMode             string  `json:"blob-run-mode"`
				LevelMerge              bool    `json:"level-merge"`
				RangeMerge              bool    `json:"range-merge"`
				MaxSortedRuns           int     `json:"max-sorted-runs"`
				GcMergeRewrite          bool    `json:"gc-merge-rewrite"`
			} `json:"titan"`
		} `json:"defaultcf"`
		Titan struct {
			Enabled                  bool   `json:"enabled"`
			Dirname                  string `json:"dirname"`
			DisableGc                bool   `json:"disable-gc"`
			MaxBackgroundGc          int    `json:"max-background-gc"`
			PurgeObsoleteFilesPeriod string `json:"purge-obsolete-files-period"`
		} `json:"titan"`
	} `json:"raftdb"`
	RaftEngine struct {
		Enable                    bool   `json:"enable"`
		Dir                       string `json:"dir"`
		RecoveryMode              string `json:"recovery-mode"`
		BytesPerSync              string `json:"bytes-per-sync"`
		TargetFileSize            string `json:"target-file-size"`
		PurgeThreshold            string `json:"purge-threshold"`
		CacheLimit                string `json:"cache-limit"`
		BatchCompressionThreshold string `json:"batch-compression-threshold"`
	} `json:"raft-engine"`
	Security struct {
		CaPath        string        `json:"ca-path"`
		CertPath      string        `json:"cert-path"`
		KeyPath       string        `json:"key-path"`
		CertAllowedCn []interface{} `json:"cert-allowed-cn"`
		RedactInfoLog interface{}   `json:"redact-info-log"`
		Encryption    struct {
			DataEncryptionMethod           string `json:"data-encryption-method"`
			DataKeyRotationPeriod          string `json:"data-key-rotation-period"`
			EnableFileDictionaryLog        bool   `json:"enable-file-dictionary-log"`
			FileDictionaryRewriteThreshold int    `json:"file-dictionary-rewrite-threshold"`
			MasterKey                      struct {
				Type string `json:"type"`
			} `json:"master-key"`
			PreviousMasterKey struct {
				Type string `json:"type"`
			} `json:"previous-master-key"`
		} `json:"encryption"`
	} `json:"security"`
	Import struct {
		NumThreads          int    `json:"num-threads"`
		StreamChannelWindow int    `json:"stream-channel-window"`
		ImportModeTimeout   string `json:"import-mode-timeout"`
	} `json:"import"`
	Backup struct {
		NumThreads int    `json:"num-threads"`
		BatchSize  int    `json:"batch-size"`
		SstMaxSize string `json:"sst-max-size"`
	} `json:"backup"`
	PessimisticTxn struct {
		WaitForLockTimeout  string `json:"wait-for-lock-timeout"`
		WakeUpDelayDuration string `json:"wake-up-delay-duration"`
		Pipelined           bool   `json:"pipelined"`
	} `json:"pessimistic-txn"`
	Gc struct {
		RatioThreshold                   float64 `json:"ratio-threshold"`
		BatchKeys                        int     `json:"batch-keys"`
		MaxWriteBytesPerSec              string  `json:"max-write-bytes-per-sec"`
		EnableCompactionFilter           bool    `json:"enable-compaction-filter"`
		CompactionFilterSkipVersionCheck bool    `json:"compaction-filter-skip-version-check"`
	} `json:"gc"`
	Split struct {
		QPSThreshold        int     `json:"qps-threshold"`
		SplitBalanceScore   float64 `json:"split-balance-score"`
		SplitContainedScore float64 `json:"split-contained-score"`
		DetectTimes         int     `json:"detect-times"`
		SampleNum           int     `json:"sample-num"`
		SampleThreshold     int     `json:"sample-threshold"`
		ByteThreshold       int     `json:"byte-threshold"`
	} `json:"split"`

	ResolvedTs struct {
		Enable            bool   `json:"enable"`
		AdvanceTsInterval string `json:"advance-ts-interval"`
		ScanLockPoolSize  int    `json:"scan-lock-pool-size"`
	} `json:"resolved-ts"`
}

type getBytes = func() []byte

func (c *StoreConfig) getMbSize(fn getBytes, value uint64) uint64 {
	if c == nil {
		return value
	}
	body := fn()
	var bs typeutil.ByteSize
	if err := json.Unmarshal(body, &bs); err != nil {
		return value
	}
	return bs.ToMiB()
}

// GetRegionMaxSize returns the max region size in MB
func (c *StoreConfig) GetRegionMaxSize() uint64 {
	fn := func() []byte {
		return []byte(`"` + c.Coprocessor.RegionMaxSize + `"`)
	}
	return c.getMbSize(fn, defaultRegionMaxSize)
}

// GetRegionSplitSize returns the region split size in MB
func (c *StoreConfig) GetRegionSplitSize() uint64 {
	fn := func() []byte {
		return []byte(`"` + c.Coprocessor.RegionSplitSize + `"`)
	}
	return c.getMbSize(fn, defaultRegionSplitSize)
}

// GetRegionSplitKeys returns the region split keys
func (c *StoreConfig) GetRegionSplitKeys() uint64 {
	if c == nil || c.Coprocessor.RegionSplitKeys == 0 {
		return defaultRegionSplitKey
	}
	return uint64(c.Coprocessor.RegionSplitKeys)
}

// GetRegionMaxKeys returns the region split keys
func (c *StoreConfig) GetRegionMaxKeys() uint64 {
	if c == nil || c.Coprocessor.RegionMaxKeys == 0 {
		return defaultRegionMaxKey
	}
	return uint64(c.Coprocessor.RegionMaxKeys)
}

// SetConfig updates the config with given config map.
func (m *StoreConfigManager) SetConfig(c *StoreConfig) {
	m.mu.Lock()
	defer m.mu.Unlock()
	m.config = c
}

// Load Loads the store configuration.
// the lasted config will be saved to the file.
func (m *StoreConfigManager) Load(url string) error {
	resp, err := m.client.Get(fmt.Sprintf("%s/config", url))
	if err != nil {
		return err
	}
	defer resp.Body.Close()
	body, err := ioutil.ReadAll(resp.Body)
	if err != nil {
		return err
	}
	var cfg StoreConfig
	if err := json.Unmarshal(body, &cfg); err != nil {
		return err
	}
	m.SetConfig(&cfg)
	return nil
}
